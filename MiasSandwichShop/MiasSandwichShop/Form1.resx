<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>